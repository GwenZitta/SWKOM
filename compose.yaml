services:
  server:
    container_name: server
    build:
      context: ./GGY
      dockerfile: Dockerfile
    ports:
      - "8081:8081"
    depends_on:
      db:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      minio:
        condition: service_healthy

  web:
    container_name: web
    build:
      context: ./ggy-ui
    ports:
      - "3000:3000"
    depends_on:
      - db
      - rabbitmq
      - minio

  db:
    image: postgres:latest
    container_name: db
    restart: always
    user: postgres
    secrets:
      - db-password
    volumes:
      - db-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=production
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD_FILE=/run/secrets/db-password
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 1s
      timeout: 3s
      retries: 10

  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:3-management
    ports:
      - "5672:5672"      # RabbitMQ main port
      - "15672:15672"    # RabbitMQ management UI port
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 30s
      timeout: 10s
      retries: 5

  minio:
    image: minio/minio
    container_name: minio
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    ports:
      - "9000:9000"
      - "9090:9090"
    command: server --console-address ":9090" /data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 10s
      retries: 5

  ocr_worker:
    build:
      context: ./GGY/ocr_worker  # Pfad zum OCR-Worker
      dockerfile: Dockerfile
    container_name: ocr_worker
    depends_on:
      - rabbitmq
      - minio
    environment:
      - SPRING_PROFILES_ACTIVE=default
      - RABBITMQ_HOST=rabbitmq
      - OCR_QUEUE=documentQueue
      - MINIO_URL=http://minio:9000
      - MINIO_ACCESS_KEY=minioadmin
      - MINIO_SECRET_KEY=minioadmin
      - MINIO_BUCKET_NAME=documents
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://minio:9000/minio/health/live" ]
      interval: 30s
      retries: 5
      start_period: 10s
      timeout: 10s

volumes:
  db-data:
  minio-data:

secrets:
  db-password:
    file: db/password.txt
